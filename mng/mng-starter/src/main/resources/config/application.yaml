server:
  port: 8081

eureka:
  instance:
    instance-id: ${eureka.instance.ip-address}:${server.port}
    prefer-ip-address: true
    ip-address: ${spring.cloud.client.ip-address}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://101.43.239.43:8300/eureka/ #Eureka地址

spring:
  application:
    name: 3x-mng
  servlet:
    multipart:
      max-file-size: 20MB #设置单个文件最大长度
      max-request-size: 100MB #最大请求文件的大小
  task:
    execution:
      thread-name-prefix: 3x-thread-task-
      pool:
        core-size: 50
        max-size: 200
        keep-alive: 20s
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://47.93.4.43:3306/3xdb?&useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: root
    password: Yyl@4012

  kafka:
    bootstrap-servers: 121.36.32.146:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer # 序列化key的类
      value-serializer: org.apache.kafka.common.serialization.StringSerializer # 反序列化value的类
    # 消费者 key value的反序列化方式
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #指定消费者组的 group_id
      group-id: 3x-mng-group
      enable-auto-commit: true
      auto-commit-interval: 1000
      auto-offset-reset: latest


mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    auto-mapping-behavior: full
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/**/*Mapper.xml

logging:
  config: classpath:config/logback-spring.xml